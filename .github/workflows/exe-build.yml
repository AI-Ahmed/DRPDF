name: Build Windows Executable

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -e .
        
    - name: Build executable
      run: |
        $destExe = "./build/drpdf.exe"
        pyinstaller --clean --onefile --name drpdf drpdf/drpdf.py
        if (!(Test-Path $destExe)) {
            throw "Failed to build executable"
        }
        
    - name: Test executable
      run: |
        ./build/drpdf.exe --version
        
    - name: Test plain text translation
      run: |
        ./build/drpdf.exe ./test/file/translate.cli.plain.text.pdf -o ./test/file
        
    - name: Test text with figure translation
      run: |
        ./build/drpdf.exe ./test/file/translate.cli.text.with.figure.pdf -o ./test/file
        
    - name: Test offline translation
      run: |
        ./build/drpdf.exe ./test/file/translate.cli.plain.text.pdf -o ./test/file

  test-win64-exe:
    needs: 
      - build
    runs-on: windows-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: win64-exe
          path: ./build

      - name: Test show version
        run: |
          ./build/drpdf.exe --version
      
      - name: Test - Translate a PDF file with plain text only
        run: |
          ./build/drpdf.exe ./test/file/translate.cli.plain.text.pdf -o ./test/file

      - name: Test - Translate a PDF file figure
        run: |
          ./build/drpdf.exe ./test/file/translate.cli.text.with.figure.pdf -o ./test/file

      - name: Delete offline assets and cache
        shell: pwsh
        run: |
          Write-Host "==== 查找并删除离线资源包 ===="
          $offlineAssetsPath = Get-ChildItem -Path "./build" -Filter "offline_assets_*.zip" -Recurse | Select-Object -First 1 -ExpandProperty FullName
          if ($offlineAssetsPath) {
            Write-Host "找到离线资源包: $offlineAssetsPath"
            Remove-Item -Path $offlineAssetsPath -Force
            Write-Host "已删除离线资源包"
          } else {
            Write-Host "未找到离线资源包"
          }
          
          Write-Host "==== 删除缓存目录 ===="
          $cachePath = "$env:USERPROFILE/.cache/babeldoc"
          if (Test-Path $cachePath) {
            Remove-Item -Path $cachePath -Recurse -Force
            Write-Host "已删除缓存目录: $cachePath"
          } else {
            Write-Host "缓存目录不存在: $cachePath"
          }

      - name: Test - Translate without offline assets
        run: |
          ./build/drpdf.exe ./test/file/translate.cli.plain.text.pdf -o ./test/file
          
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./test/file/

  